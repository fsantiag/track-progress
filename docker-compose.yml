version: '3.3'

services:
  backend:
    container_name: backend
    image: backend
    environment:
      - CASSANDRA_HOST=cassandra
      - SQS_HOST=http://sqs:4576
      - PROFILE_ENV=prod
    networks:
      tp-network:
         ipv4_address: 172.28.0.2
    ports:
      - "8070:8080"
    command: "bash -c './wait.sh -t 30 sqs:4576 && ./wait.sh -t 30 cassandra:9042 && /app/backend'"
  bff:
    container_name: bff
    image: bff
    environment: 
      - SQS_HOST=http://sqs:4576
      - PROFILE_ENV=prod
    networks: 
      tp-network:
        ipv4_address: 172.28.0.6
    ports: 
      - "8071:8081"
    command: "bash -c './wait.sh -t 30 sqs:4576 && /app/bff'"
  frontend:
    container_name: frontend
    image: frontend
    ports:
      - "8080:80"
    networks:
      tp-network:
         ipv4_address: 172.28.0.3
  sqs:
    image: localstack/localstack
    container_name: sqs
    ports:
      - "8090:8080"
      - "4576:4576"
    environment:
      - SERVICES=sqs
    networks:
      tp-network:
         ipv4_address: 172.28.0.5
  cassandra:
    image: cassandra
    container_name: cassandra
    volumes:
      - '${PWD}/docker/cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml'
    networks:
      tp-network:
         ipv4_address: 172.28.0.4
    ports:
      - "9042:9042"
networks:
    tp-network:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16
